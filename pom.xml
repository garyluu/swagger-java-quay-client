<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.swagger</groupId>
    <artifactId>swagger-java-quay-client</artifactId>
    <packaging>jar</packaging>
    <version>1.2.1-SNAPSHOT</version>
    <name>swagger-java-quay-client</name>
    <url>http://maven.apache.org</url>
    <distributionManagement>
      <repository>
        <id>github</id>
        <name>releases</name>
	<url>https://maven.pkg.github.com/garyluu/swagger-java-quay-client/releases</url>
      </repository>
      <snapshotRepository>
        <id>github</id>
        <name>snapshots</name>
	<url>https://maven.pkg.github.com/garyluu/swagger-java-quay-client/snapshots</url>
      </snapshotRepository>
    </distributionManagement>
    <build>
        <plugins>
            <!-- activate the plugin -->
            <plugin>
                <groupId>io.swagger.codegen.v3</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- specify the swagger yaml -->
                            <inputSpec>swagger.yaml</inputSpec>

                            <!-- target to generate java client code -->
                            <language>java</language>

                            <!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
                                 you can use the following target: <language>spring</language> -->

                            <!-- pass any necessary config options -->
                            <configOptions>
                                <dateLibrary>joda</dateLibrary>
                            </configOptions>

                            <!-- override the default library to jersey2 -->
                            <library>jersey2</library>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
         <!-- dependencies are needed for the client being generated -->
         
        <dependency>
          <groupId>io.swagger</groupId>
          <artifactId>swagger-annotations</artifactId>
          <version>${swagger-annotations-version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations-v3-version}</version>
        </dependency>

        <!-- You can find the dependencies for the library configuation you chose by looking in JavaClientCodegen.
             Then find the corresponding dependency on Maven Central, and set the versions in the property section below -->
                
        <!-- HTTP client: jersey-client -->
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-client</artifactId>
          <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey-version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey-version}</version>
        </dependency>

        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
            <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.jaxrs</groupId>
          <artifactId>jackson-jaxrs-json-provider</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        
        <!-- Joda time: if you use it -->
        <dependency>
          <groupId>com.fasterxml.jackson.datatype</groupId>
          <artifactId>jackson-datatype-joda</artifactId>
          <version>${jackson-version}</version>
        </dependency>
        <dependency>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
          <version>${jodatime-version}</version>
        </dependency>          

        <!-- Base64 encoding that works in both JVM and Android -->
        <dependency>
            <groupId>com.brsanthu</groupId>
            <artifactId>migbase64</artifactId>
            <version>2.2</version>
        </dependency>       
</dependencies>
	<scm>
		<url>https://github.com/garyluu/swagger-java-quay-client</url>
		<connection>scm:git:git://github.com/garyluu/swagger-java-quay-client.git</connection>
		<developerConnection>scm:git:git@github.com:garyluu/swagger-java-quay-client.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>
    <properties>
        <swagger-annotations-version>1.5.20</swagger-annotations-version>
        <swagger-annotations-v3-version>2.0.2</swagger-annotations-v3-version>
        <jersey-version>2.25.1</jersey-version>
        <jackson-version>2.9.5</jackson-version>
        <jodatime-version>2.7</jodatime-version>
        <maven-plugin-version>1.0.0</maven-plugin-version>
	<junit-version>4.8.1</junit-version>
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
    </properties>
</project>
